{
  "name": "kit",
  "productName": "Kit",
  "version": "0.0.0-development",
  "description": "The Script Kit App",
  "main": "./out/main/index.mjs",
  "scripts": {
    "build": "concurrently \"yarn build:main\" \"yarn build:renderer\"",
    "build:local": "node ./build/local-assets.js && concurrently \"yarn build:main\" \"yarn build:renderer\"",
    "build:main": "cross-env NODE_ENV=production webpack --config ./.erb/configs/webpack.config.main.prod.babel.js",
    "build:renderer": "cross-env NODE_ENV=production webpack --config ./.erb/configs/webpack.config.renderer.prod.babel.js",
    "rebuild": "electron-rebuild",
    "lint": "cross-env NODE_ENV=development eslint . --cache --ext .js,.jsx,.ts,.tsx",
    "package": "yarn build && npx electron-builder build --publish never",
    "webpack-dev": "yarn cross-env NODE_OPTIONS=--max_old_space_size=4096 NODE_ENV=development webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.babel.js",
    "build-dll": "yarn cross-env NODE_OPTIONS=--max_old_space_size=4096 NODE_ENV=development webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.babel.js",
    "yarn-dedupe": "yarn-deduplicate yarn.lock",
    "install-electron-deps": "node -r @babel/register .erb/scripts/CheckNativeDep.js && npx electron-builder install-app-deps",
    "rebuild-node-pty": "electron-rebuild -f -o node-pty -m ./",
    "silly": "cross-env LOG_LEVEL=silly yarn start",
    "super-silly": "cross-env ELECTRON_ENABLE_STACK_DUMPING=true ELECTRON_ENABLE_LOGGING=true LOG_LEVEL=silly yarn start",
    "start": "node -r @babel/register ./.erb/scripts/CheckPortInUse.js && cross-env yarn start:renderer",
    "sponsor": "KIT_SPONSOR=development yarn start",
    "tiktok": "KIT_SPONSOR=development KIT_TIKTOK=development yarn start",
    "splash": "KIT_SPLASH=true yarn start",
    "start:install": "source ./build/tmp-kit.sh && node -r @babel/register ./.erb/scripts/CheckPortInUse.js && cross-env yarn start:renderer",
    "start:main": "yarn build:main && cross-env NODE_ENV=development electron --trace-warnings ./src/main.prod.js",
    "start:renderer": "cross-env NODE_ENV=development webpack serve --config ./.erb/configs/webpack.config.renderer.dev.babel.js",
    "test-update": "TEST_UPDATE=true yarn start",
    "test-m1-update": "TEST_UPDATE=true yarn m1",
    "test": "jest",
    "css": "./node_modules/.bin/postcss -o ./src/dist/style.css ./src/App.global.css",
    "m1": "PATH=~/.knode/bin:$PATH yarn build:local && DEBUG_PROD=true electron-builder --mac dir --arm64 -c.mac.identity=null --publish never",
    "m1-dmg": "PATH=~/.knode/bin:$PATH yarn build:local && DEBUG_PROD=true electron-builder --mac --arm64 -c.mac.identity=null --publish never",
    "m1-dmg-publish": "PATH=~/.knode/bin:$PATH yarn build:local && DEBUG_PROD=true electron-builder --mac --arm64 -c.mac.identity=null --publish always",
    "mac": "PATH=~/.knode/bin:$PATH yarn build:local && DEBUG_PROD=true electron-builder --mac dir --x64 -c.mac.identity=null --publish never",
    "win": "yarn build:local && DEBUG_PROD=true npx electron-builder -w",
    "linux": "PATH=~/.knode/bin:$PATH yarn build:local && DEBUG_PROD=true electron-builder --linux AppImage --publish never --arm64",
    "release": "yarn build:local && DEBUG_PROD=true npx electron-builder -c.mac.identity=null --publish never --mac",
    "cp-vs-assets": "cp -R ./node_modules/monaco-editor/min/vs ./assets",
    "v": "PATH=~/.knode/bin:$PATH node --version",
    "write-node-version": "node ./scripts/write-node-version.js",
    "vite-start": "electron-vite preview",
    "vite-dev": "./vite-dev.sh",
    "vite-prebuild": "electron-vite build",
    "vite-package": "electron-vite build --outDir=dist && DEBUG_PROD=true electron-builder --mac --arm64 -c.mac.identity=null --publish never",
    "vite-build": "DEBUG_PROD=true electron-builder --mac --arm64 -c.mac.identity=null --publish never",
    "electron-rebuild": "electron-builder install-app-deps"
  },
  "lint-staged": {
    "*.{jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "buildDependenciesFromSource": false,
    "generateUpdatesFilesForAllChannels": true,
    "detectUpdateChannel": "true",
    "productName": "Kit",
    "appId": "app.scriptkit",
    "asar": true,
    "asarUnpack": [
      "resources/**"
    ],
    "files": [
      "!**/.vscode/*",
      "!src/*",
      "!electron.vite.config.{js,ts,mjs,cjs}",
      "!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}",
      "!{.env,.env.*,.npmrc,pnpm-lock.yaml}",
      "!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}"
    ],
    "afterSign": ".erb/scripts/Notarize.js",
    "protocols": [
      {
        "name": "kit",
        "role": "Viewer",
        "schemes": [
          "kit"
        ]
      }
    ],
    "win": {
      "artifactName": "${productName}-Windows-${version}-${arch}.${ext}"
    },
    "mac": {
      "artifactName": "${productName}-macOS-${version}-${arch}.${ext}",
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "gatekeeperAssess": false,
      "notarize": false,
      "extendInfo": {
        "CFBundleDocumentTypes": [
          {
            "CFBundleTypeName": "Folders",
            "CFBundleTypeRole": "Viewer",
            "LSHandlerRank": "Alternate",
            "LSItemContentTypes": [
              "public.folder",
              "com.apple.bundle",
              "com.apple.package",
              "com.apple.resolvable"
            ]
          },
          {
            "CFBundleTypeName": "UnixExecutables",
            "CFBundleTypeRole": "Shell",
            "LSHandlerRank": "Alternate",
            "LSItemContentTypes": [
              "public.unix-executable"
            ]
          }
        ]
      }
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "linux": {
      "artifactName": "${productName}-Linux-${version}-${arch}.${ext}",
      "category": "Development",
      "executableName": "scriptkit"
    },
    "directories": {
      "buildResources": "build"
    },
    "extraResources": [
      {
        "from": "assets",
        "to": "assets",
        "filter": [
          "**/*"
        ]
      }
    ],
    "publish": {
      "provider": "github",
      "owner": "johnlindquist",
      "repo": "kitapp"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/johnlindquist/kitapp.git"
  },
  "author": {
    "name": "John Lindquist",
    "email": "johnlindquist@gmail.com",
    "url": "https://scriptkit.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/johnlindquist/kitapp/issues"
  },
  "keywords": [
    "electron",
    "react",
    "typescript",
    "ts"
  ],
  "homepage": "https://github.com/johnlindquist/kitapp#readme",
  "jest": {
    "resolver": "jest-node-exports-resolver",
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules"
    ],
    "modulePathIgnorePatterns": [
      ".history"
    ],
    "setupFiles": [
      "./.erb/scripts/CheckBuildsExist.js"
    ]
  },
  "devDependencies": {
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@electron/notarize": "^2.1.0",
    "@electron/rebuild": "^3.6.0",
    "@pmmmwh/react-refresh-webpack-plugin": "0.4.3",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.10",
    "@testing-library/jest-dom": "5.11.6",
    "@testing-library/react": "14.1.2",
    "@types/chokidar": "2.1.3",
    "@types/dompurify": "^3.0.5",
    "@types/download": "8.0.5",
    "@types/minimist": "1.2.5",
    "@types/node": "^18.19.5",
    "@types/node-schedule": "2.1.5",
    "@types/react": "^18.2.47",
    "@types/react-dom": "^18.2.18",
    "@types/react-virtualized-auto-sizer": "1.0.3",
    "@types/react-window": "1.8.8",
    "@types/tar": "6.1.10",
    "@vitejs/plugin-react": "^4.2.1",
    "chalk": "4.1.0",
    "concurrently": "5.3.0",
    "cross-env": "7.0.3",
    "detect-port": "^1.5.1",
    "download": "8.0.0",
    "electron": "^29.0.0-beta.5",
    "electron-builder": "^24.9.1",
    "electron-vite": "^2.0.0",
    "eslint": "^8.56.0",
    "eslint-config-erb": "4.1.0",
    "execa": "^6.1.0",
    "husky": "4.2.5",
    "jest": "27.0.6",
    "lint-staged": "12.1.2",
    "mini-css-extract-plugin": "2.7.6",
    "optimize-css-assets-webpack-plugin": "6.0.1",
    "postcss-cli": "10.1.0",
    "react-refresh": "^0.14.0",
    "rimraf": "3.0.0",
    "tailwindcss": "^3.4.1",
    "vite": "^5.0.12",
    "yarn-deduplicate": "6.0.2"
  },
  "dependencies": {
    "@electron-toolkit/preload": "^3.0.0",
    "@fontsource/jetbrains-mono": "^5.0.18",
    "@heroicons/react": "1.0.4",
    "@johnlindquist/clipboard": "^0.1.38",
    "@johnlindquist/kit": "latest",
    "@johnlindquist/mac-clipboard-listener": "^1.0.3",
    "@johnlindquist/mac-frontmost": "^1.0.7",
    "@johnlindquist/mac-panel-window": "^1.3.0",
    "@johnlindquist/node-window-manager": "^1.0.22",
    "@monaco-editor/react": "^4.6.0",
    "@nut-tree/nut-js": "3.1.2",
    "@react-hook/resize-observer": "1.2.6",
    "@types/detect-port": "^1.3.5",
    "@types/tail": "^2.2.3",
    "@vscode/codicons": "^0.0.35",
    "animate.css": "^4.1.1",
    "ansi-to-html": "0.7.2",
    "axios": "1.5.1",
    "builtin-modules": "^3.3.0",
    "chokidar": "3.5.3",
    "classnames": "^2.3.2",
    "color-name": "^1.1.4",
    "contrast-color": "^1.0.1",
    "date-fns": "2.30.0",
    "detect-file-type": "0.2.8",
    "dns-socket": "^4.2.2",
    "dompurify": "^3.0.8",
    "dotenv": "^16.4.1",
    "electron-context-menu": "^3.6.1",
    "electron-devtools-installer": "^3.2.0",
    "electron-log": "^5.1.1",
    "electron-store": "^8.1.0",
    "electron-unhandled": "^4.0.1",
    "electron-updater": "^6.1.7",
    "emoji-picker-react": "^4.7.12",
    "framer-motion": "6.5.1",
    "fs-extra": "^11.2.0",
    "hpagent": "^1.2.0",
    "html-react-parser": "5.1.1",
    "image-size": "0.9.4",
    "jotai": "2.6.4",
    "lodash-es": "^4.17.21",
    "memoize-one": "5.2.1",
    "million": "^3.0.0",
    "minimist": "1.2.5",
    "monaco-editor": "0.45.0",
    "nanoid": "3.1.30",
    "native-keymap": "3.3.4",
    "node-downloader-helper": "1.0.18",
    "node-mac-permissions": "^2.3.0",
    "node-pty": "^1.1.0-beta6",
    "node-schedule": "2.1.1",
    "node-stream-zip": "^1.15.0",
    "petite-vue": "^0.4.1",
    "postcss": "8.4.32",
    "quick-score": "0.2.0",
    "react": "^18.2.0",
    "react-chat-elements": "^12.0.11",
    "react-dom": "^18.2.0",
    "react-hotkeys-hook": "3.3.2",
    "react-icons": "^4.12.0",
    "react-resizable-panels": "^2.0.2",
    "react-toastify": "^9.1.3",
    "react-virtualized-auto-sizer": "1.0.21",
    "react-window": "1.8.10",
    "rxjs": "6.6.7",
    "simplebar-react": "2.4.3",
    "tail": "^2.2.6",
    "tar": "6.2.0",
    "typescript": "^5.3.3",
    "uiohook-napi": "^1.5.3",
    "untildify": "5.0.0",
    "valtio": "1.13.0",
    "xterm": "5.3.0",
    "xterm-addon-fit": "0.8.0",
    "xterm-addon-ligatures": "0.7.0",
    "xterm-addon-search": "0.13.0",
    "xterm-addon-serialize": "0.11.0",
    "xterm-addon-unicode11": "0.6.0",
    "xterm-addon-web-links": "0.9.0"
  },
  "engines": {
    "node": ">=14.17.0"
  },
  "devEngines": {
    "node": ">=14.17.0",
    "npm": ">=6.x",
    "yarn": ">=1.21.3"
  },
  "browserslist": [],
  "prettier": {
    "plugins": [
      "prettier-plugin-tailwindcss"
    ],
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".babelrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "renovate": {
    "extends": [
      "bliss"
    ],
    "baseBranches": [
      "next"
    ]
  },
  "husky": {
    "hooks": {
      "commented-out-pre-commit": "lint-staged"
    }
  }
}
